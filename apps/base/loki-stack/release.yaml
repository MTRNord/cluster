apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      version: "2.9.x"
      chart: loki-stack
      sourceRef:
        kind: HelmRepository
        name: loki-stack
      interval: 60m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
    # Force recreation due to Helm not properly patching Deployment with e.g. added port,
    # causing spurious drift detection
    force: true
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    loki:
      enabled: true
      isDefault: false
      url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
      config:
        storage_config:
          boltdb_shipper:
            active_index_directory: /data/loki/boltdb-shipper-active
            cache_location: /data/loki/boltdb-shipper-cache
            resync_interval: 5s
            cache_ttl: 24h
            shared_store: s3
        compactor:
          compaction_interval: 10m
          retention_enabled: true
          deletion_mode: filter-and-delete
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        limits_config:
          retention_period: 336h
        frontend:
          max_outstanding_per_tenant: 2048
        query_scheduler:
          max_outstanding_requests_per_tenant: 2048
      persistence:
        enabled: false
        accessModes:
          - ReadWriteOnce
        size: 10Gi
        annotations: {}
        labels: {}
      rbac:
        pspEnabled: false
      datasource:
        uid: "loki"

    promtail:
      enabled: true
      config:
        logLevel: debug
        serverPort: 3101
        clients:
          - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
      sidecar:
        configReloader:
          enabled: false
      serviceMonitor:
        enabled: true

    fluent-bit:
      enabled: false

    grafana:
      enabled: false
      sidecar:
        datasources:
          enabled: true
          maxLines: 1000
      image:
        tag: 8.3.5

    prometheus:
      enabled: false
      isDefault: false

    filebeat:
      enabled: false
      filebeatConfig:
        filebeat.yml: |
          # logging.level: debug
          filebeat.inputs:
          - type: container
            paths:
              - /var/log/containers/*.log
            processors:
            - add_kubernetes_metadata:
                host: ${NODE_NAME}
                matchers:
                - logs_path:
                    logs_path: "/var/log/containers/"
          output.logstash:
            hosts: ["logstash-loki:5044"]
    logstash:
      enabled: false
      image: grafana/logstash-output-loki
      imageTag: 1.0.1
      filters:
        main: |-
          filter {
            if [kubernetes] {
              mutate {
                add_field => {
                  "container_name" => "%{[kubernetes][container][name]}"
                  "namespace" => "%{[kubernetes][namespace]}"
                  "pod" => "%{[kubernetes][pod][name]}"
                }
                replace => { "host" => "%{[kubernetes][node][name]}"}
              }
            }
            mutate {
              remove_field => ["tags"]
            }
          }
      outputs:
        main: |-
          output {
            loki {
              url => "http://loki:3100/loki/api/v1/push"
              #username => "test"
              #password => "test"
            }
            # stdout { codec => rubydebug }
          }

