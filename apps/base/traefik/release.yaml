apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik-ingress
spec:
  releaseName: traefik
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
  values:
    ingressRoute:
      dashboard:
        enabled: false
    dashboard:
      enabled: true
    ingressClass:
      enabled: true
      isDefaultClass: true
    persistence:
      enabled: false
    additionalArguments:
      - "--api.dashboard=true"
      - "--entryPoints.web.proxyProtocol.trustedIPs=127.0.0.1/32,10.10.0.0/16"
      - "--entryPoints.websecure.proxyProtocol.trustedIPs=127.0.0.1/32,10.10.0.0/16"
      - "--entryPoints.ssh.proxyProtocol.trustedIPs=127.0.0.1/32,10.10.0.0/16"
      - "--entryPoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32,10.10.0.0/16"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=127.0.0.1/32,10.10.0.0/16"
      - "--entryPoints.ssh.forwardedHeaders.trustedIPs=127.0.0.1/32,10.10.0.0/16"
    priorityClassName: "system-cluster-critical"
    securityContext:
      capabilities:
        drop: ["ALL"]
        add: ["CAP_NET_BIND_SERVICE"]
      readOnlyRootFilesystem: true
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    metrics:
      prometheus:
        entryPoint: metrics
        serviceMonitor:
          metricRelabelings: []
          relabelings: []
          jobLabel: traefik
          interval: 30s
          honorLabels: true
        service:
          enabled: true
    providers:
      kubernetesIngress:
        publishedService:
          enabled: false
    service:
      annotations:
        load-balancer.hetzner.cloud/location: fsn1
        load-balancer.hetzner.cloud/use-private-ip: "true"
        load-balancer.hetzner.cloud/name: api.midnightthoughts.k8s.local
        load-balancer.hetzner.cloud/uses-proxyprotocol: "true"
      spec:
        externalTrafficPolicy: Cluster
    deployment:
      replicas: 3
    tlsOptions:
      default:
        minVersion: VersionTLS13
    experimental:
      http3:
        enabled: true
    ports:
      traefik:
        port: 9000
        expose:
          default: false
        exposedPort: 9000
        protocol: TCP
      web:
        port: 8000
        expose:
          default: true
        exposedPort: 80
        protocol: TCP
      websecure:
        port: 8443
        expose:
          default: true
        exposedPort: 443
        protocol: TCP
        tls:
          enable: true
          options: ""
          certResolver: ""
          domains: []
        http3:
          enabled: true
          advertisedPort: 443
        middlewares:
          - traefik-ingress-hsts@kubernetescrd
          - traefik-ingress-compress@kubernetescrd
      ssh:
        port: 2222
        expose:
          default: true
        exposedPort: 2222
        protocol: TCP
      metrics:
        port: 9100
        expose:
          default: false
        exposedPort: 9100
        protocol: TCP
    instanceLabelOverride: traefik
    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: '{{ template "traefik.name" . }}'
        maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
