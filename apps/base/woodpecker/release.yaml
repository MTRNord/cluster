apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: woodpecker
  namespace: woodpecker
spec:
  releaseName: woodpecker
  chart:
    spec:
      chart: woodpecker-server
      sourceRef:
        kind: HelmRepository
        name: woodpecker
  interval: 50m
  install:
    remediation:
      retries: 3
  # Default values
  # https://github.com/stefanprodan/podinfo/blob/master/charts/podinfo/values.yaml
  values:
    replicaCount: 1

    image:
      repository: woodpeckerci/woodpecker-agent
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "next"

    env:
      WOODPECKER_SERVER: "woodpecker-woodpecker-server.woodpecker.svc.cluster.local:9000"
      WOODPECKER_BACKEND: kubernetes
      WOODPECKER_BACKEND_K8S_NAMESPACE: woodpecker
      WOODPECKER_BACKEND_K8S_STORAGE_CLASS: "nfs-client"
      WOODPECKER_BACKEND_K8S_VOLUME_SIZE: 10G
      WOODPECKER_BACKEND_K8S_STORAGE_RWX: true
      WOODPECKER_MAX_PROCS: "8"
      WOODPECKER_DEBUG_PRETTY: "true"
      WOODPECKER_LOG_LEVEL: debug

    persistentVolume:
      enabled: true
      size: 10Gi
      mountPath: "/var/lib/woodpecker"
      storageClass: "nfs-client"

    # Docker-in-Docker is normally not needed as Woodpecker natively supports Kubernetes
    dind:
      enabled: false
      image: "docker:20.10.12-dind"
      env:
        DOCKER_DRIVER: "overlay2"
      resources: {}

    extraSecretNamesForEnvFrom:
      - woodpecker-secret

    serviceAccount:
      # Specifies whether a service account should be created (also see RBAC subsection)
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
      rbac:
        # If your cluster has RBAC enabled and you're using the Kubernetes agent-
        # backend you'll need this. (this is true for almost all production clusters)
        # only change this if you have a non CNCF compliant cluster, missing the RBAC endpoints
        # the Role and RoleBinding are only created if serviceAccount.create is also true
        create: true
        # additional annotations and labels in role and roleBinding are only needed, if you
        # are using additional tooling to manage / verify roles or roleBindings (OPA, etc.)
        role:
          annotations: {}
          labels: {}
        roleBinding:
          annotations: {}
          labels: {}
