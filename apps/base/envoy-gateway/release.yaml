apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: envoy-gateway
    namespace: envoy-gateway
spec:
    releaseName: envoy-gateway
    interval: 60m
    chartRef:
        kind: OCIRepository
        name: envoy-gateway
    values:
        podDisruptionBudget:
            minAvailable: 1
        deployment:
            replicas: 3
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
    name: custom-proxy-config
    namespace: envoy-gateway
spec:
    provider:
        type: Kubernetes
        kubernetes:
            envoyDeployment:
                replicas: 3
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
    name: envoy-gateway-class
    namespace: envoy-gateway
spec:
    controllerName: gateway.envoyproxy.io/gatewayclass-controller
    parametersRef:
        group: gateway.envoyproxy.io
        kind: EnvoyProxy
        name: custom-proxy-config
        namespace: envoy-gateway
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
    name: envoy-gateway
    namespace: envoy-gateway
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-dns
spec:
    gatewayClassName: envoy-gateway-class
    infrastructure:
        annotations:
            external-dns.alpha.kubernetes.io/access: public
            load-balancer.hetzner.cloud/location: hel1
            load-balancer.hetzner.cloud/name: envoy
            load-balancer.hetzner.cloud/use-private-ip: "true"
            load-balancer.hetzner.cloud/uses-proxyprotocol: "false"
    listeners:
        - name: http
          protocol: HTTP
          port: 80
          allowedRoutes:
            namespaces:
                from: "All"
        - name: https-midnightthoughts
          protocol: HTTPS
          hostname: "*.midnightthoughts.space"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: midnightthoughts.space-tls
        - name: https-nordgedanken
          protocol: HTTPS
          hostname: "*.nordgedanken.dev"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: nordgedanken.dev-tls
        - name: https-mtrnord-blog
          protocol: HTTPS
          hostname: "*.mtrnord.blog"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: mtrnord.blog-tls
        - name: https-midnightthoughts-root
          protocol: HTTPS
          hostname: "midnightthoughts.space"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: midnightthoughts.space-tls
        - name: https-nordgedanken-root
          protocol: HTTPS
          hostname: "nordgedanken.dev"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: nordgedanken.dev-tls
        - name: https-mtrnord-blog-root
          protocol: HTTPS
          hostname: "mtrnord.blog"
          port: 443
          allowedRoutes:
            namespaces:
                from: "All"
          tls:
            mode: Terminate
            certificateRefs:
                - kind: Secret
                  name: mtrnord.blog-tls
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
    name: enable-proxy-protocol-policy
    namespace: envoy-gateway
spec:
    targetRef:
        group: gateway.networking.k8s.io
        kind: Gateway
        name: envoy-gateway
    # WARNING: False as cilium routes the gateway locally if used internally with the public domain. HOWEVER then proxy proto cant be used...
    enableProxyProtocol: true
