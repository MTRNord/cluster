apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: ejabberd
  namespace: ejabberd
spec:
  releaseName: ejabberd
  interval: 60m
  chart:
    spec:
      chart: ejabberd
      sourceRef:
        kind: HelmRepository
        name: ejabberd
  values:
    imagePullSecrets:
      - name: ghcr-pull
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 9000
      seccompProfile:
        type: RuntimeDefault
    listenGlobal:
      s2s_use_starttls: optional
    modules:
      mod_host_meta:
        enabled: true
        options:
          bosh_service_url: "https://@HOST@/bosh"
          websocket_url: "wss://@HOST@/ws"
      mod_mam:
        enabled: true
        options:
          db_type: sql
          assume_mam_usage: true
          default: always
    listen:
      stun:
        enabled: false
      https:
        port: 5443
        exposedPort: 443
        options:
          ip: "::"
          module: ejabberd_http
          tls: true
          request_handlers:
            /admin: ejabberd_web_admin
            /bosh: mod_bosh
            /upload: mod_http_upload
            /ws: ejabberd_http_ws
            /.well-known/host-meta: mod_host_meta
            /.well-known/host-meta.json: mod_host_meta
      s2s-tls:
        enabled: true
        port: 5270
        # hostPort: 8000
        ## -- defaults to port, must correspond to ports defined in ejabberd.listen
        # containerPort: 8000
        expose: true
        exposedPort: 5270
        ## -- Different target ejabberd port on the cluster, useful for IP type LB
        # targetPort: 80
        # The port protocol (TCP/UDP)
        protocol: TCP
        # -- Use nodeport if set. This is useful if you have configured ejabberd in a
        # LoadBalancer.
        # nodePort: 30269
        # -- ejabberd listener options w/o port, transport:
        #    https://docs.ejabberd.im/admin/configuration/listen-options/
        options:
          ip: "::"
          module: ejabberd_s2s_in
          tls: true
          # max_stanza_size: 524288
      c2s:
        options:
          starttls: true
      c2s-tls:
        enabled: true
        port: 5223
        # hostPort: 5223
        # containerPort: 5223
        expose: true
        exposedPort: 5223
        ## -- Different target ejabberd port on the cluster, useful for IP type LB
        # targetPort: 80
        # The port protocol (TCP/UDP)
        protocol: TCP
        # -- Use nodeport if set. This is useful if you have configured ejabberd in a
        # LoadBalancer.
        # nodePort: 30222
        # -- ejabberd listener options w/o port, transport:
        #    https://docs.ejabberd.im/admin/configuration/listen-options/
        options:
          ip: "::"
          module: ejabberd_c2s
          tls: true
    acl:
      local:
        user_regexp: ""
      loopback:
        ip:
        - 127.0.0.0/8
        - ::1/128
      admin:
        user: mtrnord@xmpp.midnightthoughts.space
    api_permissions:
      admin access:
        what:
        - '*'
        - '!stop'
        - '!start'
        who:
          access:
            allow:
            - acl: loopback
            - acl: admin
          oauth:
            access:
              allow:
              - acl: loopback
              - acl: admin
            scope: ejabberd:admin
      console commands:
        from:
        - ejabberd_ctl
        - mod_http_api
        what: '*'
        who: all
      public commands:
        what:
        - status
        - connected_users_number
        who:
          ip: 127.0.0.1/8
    image:
      repository: "mtrnord/cluster/ejabberd"
      pullPolicy: Always
      tag: latest
    sqlDatabase:
      enabled: true
      updateSqlSchema: true
      config:
        sql_type: pgsql
        sql_server: postgres-cluster.postgres-cluster.svc.cluster.local
        sql_port: 5432
        sql_ssl: true
        sql_database: ejabberd
        sql_username: ejabberd
        sql_password: ENC[AES256_GCM,data:r4nYUV3g7uvesCkFMDcVjJUpGgqjciBx5PWSC9IMycMhmkPFQz4qpJy6pB03BPsFNhDtJU16mc5cMNslDWiFYw==,iv:pxN+te9ELH18Yhhdh8PUn/xTGaTYLaH4lJCi30YJ8f4=,tag:JqvDphQmOOzGmI9tVgwLkA==,type:str]
    certFiles:
      secretName:
        - xmpp-midnightthoughts
      sideCar:
        enabled: true
    authentification:
      auth_method:
        - sql
      auth_password_format: scram
      auth_scram_hash: sha256
      disable_sasl_mechanisms:
        - digest-md5
        - x-oauth2
    hosts:
      - localhost
      - xmpp.midnightthoughts.space
    erlangCookie: ENC[AES256_GCM,data:EWfbPsdA9GsYluzAuobSqivguVfzpD9qYs8icJFaMsA47DP13mStW+i2vB7SD3MjjMoNnaV0uylxg3215HkgNQ==,iv:VrNZuIDXgt8UFQDI0Ppndv3oGY24DLHySFCZFoFp3Uw=,tag:otLR9NF5++n/tH83Yu2Z6A==,type:str]
    service:
      type: LoadBalancer
      annotations:
        external-dns.alpha.kubernetes.io/hostname: midnightthoughts.space
        load-balancer.hetzner.cloud/location: hel1
        load-balancer.hetzner.cloud/name: ejabberd
        load-balancer.hetzner.cloud/use-private-ip: "true"
        load-balancer.hetzner.cloud/uses-proxyprotocol: "false"
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age1esjyg2qfy49awv0ptkzvpk425adczjr38m37w2mmcahzc4p8n54sll2nzh
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBjbmZRZGxockpqOTRzZDBP
        UWV2WE1yZW04R1ViUzlmY2tCUC9iYkJTVDBjCjQ2N0ovTWtLaENSMFd3QXdsOHEv
        RE9Nc3hMMVJseVJ5dUttcVIrcUV3aWsKLS0tIE90a3hYWVB6MmM1OVQ1WGNiUG9W
        SGhZVEdvdFlpb1UyNlpxWFdSYXJSV3cKwVXmigChm+r2lLLr/D4yCB0KlD4Jt5Ck
        qtIyNS7M1FkFpv5u2LCXDCo3cZJiuld3hH0823nMRGjesCUlL76I6A==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2024-05-16T07:49:18Z"
  mac: ENC[AES256_GCM,data:tMs43ZCuw/XQZzmITCoKx56QH3MA9q1eqhWP0z4Yhtjba4nIlJ/I8cXjDT/XvGuQ5P2zI1e9nIRQV/MmFGJ/JL96qTEAv2LQEJl0EHikaeRnAhwYLCuY4olwon0LME1Bu9jY7WE91mxa0m4n7WR7eRtzvNEXvXCUebyVZrWJxrw=,iv:e5LwNxcvypruirgs9F7+pkgoTSi0z2WaJb/7JadnNaE=,tag:R/6Mn6u4e4f77jE9ZkqgCw==,type:str]
  pgp: []
  encrypted_regex: ^(client_id|client_secret|secret_key_base|otp_secret|private_key|public_key|primaryKey|deterministicKey|keyDerivationSalt|token|clientId|secretKey|installationId|installationKey|uriOverride|adminToken.value|password.value|sql_password|erlangCookie|PASSWD|AUTHENTICATION_PASSWORD|ROOM_API_SECRET_KEY|adminPassword|configPassword|adminUser|configUser|APP_KEY|api_key|api_secret|keys|livekit_key|livekit_secret|secret_key|adminPassword|admin_pass|admin_email|mariadbPassword|mariadbRootPassword|privateKey|data|stringData|PASSWD|password|pass|postgresPassword|postgresqlPassword|redminePassword|smtpPassword|registration_shared_secret|shared_secret|secret)$
  version: 3.8.1
