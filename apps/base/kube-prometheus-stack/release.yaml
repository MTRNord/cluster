apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      version: 48.3.x
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 60m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
    # Force recreation due to Helm not properly patching Deployment with e.g. added port,
    # causing spurious drift detection
    force: true
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 0m
            memory: 0Mi
        #tolerations:
        #  - key: "arch"
        #    operator: "Equal"
        #    value: "arm64"
        #    effect: "NoSchedule"
        enableRemoteWriteReceiver: true
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: TRACING_ENABLED
              accessModes:
                - ReadWriteMany
              resources:
                requests:
                  storage: 25Gi
            selector: {}
    alertmanager:
      alertmanagerSpec:
        useExistingSecret: true
    namespaceOverride: monitoring
    grafana:
      plugins:
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - https://grafana.com/api/plugins/parseable-parseable-datasource/versions/1.0.2/download;parseable-parseable-datasource
        - isovalent-hubble-datasource
        - isovalent-hubbleprocessancestry-panel
      smtp:
        existingSecret: smtp-auth-secret
      extraSecretMounts:
        - name: auth-generic-oauth-secret-mount
          secretName: auth-generic-oauth-secret
          defaultMode: 288
          mountPath: /etc/secrets/auth_generic_oauth
          readOnly: true
        - name: parseable-secret-mount
          secretName: parseable-secret
          defaultMode: 288
          mountPath: /etc/secrets/parseable
          readOnly: true
      defaultDashboardsTimezone: Europe/Berlin
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: monitoring
              orgId: 1
              folder: Monitoring
              type: file
              disableDeletion: true
              editable: false
              updateIntervalSeconds: 10
              allowUiUpdates: false
              options:
                path: /var/lib/grafana/dashboards/monitoring
            - name: zammad
              orgId: 1
              folder: Zammad
              type: file
              disableDeletion: true
              editable: false
              updateIntervalSeconds: 10
              allowUiUpdates: false
              options:
                path: /var/lib/grafana/dashboards/zammad
            - name: matrix
              orgId: 1
              folder: Matrix
              type: file
              disableDeletion: true
              editable: false
              updateIntervalSeconds: 10
              allowUiUpdates: false
              options:
                path: /var/lib/grafana/dashboards/matrix
            - name: nats
              orgId: 1
              folder: Nats
              type: file
              disableDeletion: true
              editable: false
              updateIntervalSeconds: 10
              allowUiUpdates: false
              options:
                path: /var/lib/grafana/dashboards/nats
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Parseable
              type: parseable-parseable-datasource
              url: http://parseable.parseable.svc.cluster.local
              access: proxy
              isDefault: false
              basicAuth: true
              basicAuthUser: MTRNord
              secureJsonData:
                  basicAuthPassword: $__file{/etc/secrets/parseable/password}
            - name: Tempo
              type: tempo
              access: proxy
              url: http://tempo.monitoring.svc.cluster.local:3100
              isDefault: false
              jsonData:
                httpMethod: GET
                serviceMap:
                  datasourceUid: prometheus
            # - name: Hubble
            #   type: hubble
            #   access: proxy
            #   url: http://tempo.monitoring.svc.cluster.local:3100
            #   isDefault: false
            #   jsonData:
            #     httpMethod: GET
            #     serviceMap:
            #       datasourceUid: prometheus
            - name: ES - Chat Sessions
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-chat_sessions
              jsonData:
                index: 'zammad_production_chat_session'
                timeField: 'created_at'
            - name: ES - CTI Log
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-cti_log
              jsonData:
                index: 'zammad_production_cti_log'
                timeField: 'start_at'
            - name: ES - Ticket Articles
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-ticket_articles
              jsonData:
                index: 'zammad_production_ticket'
                timeField: 'article.created_at'
            - name: ES - Tickets by closed_at
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-closed_ticket
              jsonData:
                index: 'zammad_production_ticket'
                timeField: 'close_at'
            - name: ES - Tickets by created_at
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-created_ticket
              jsonData:
                index: 'zammad_production_ticket'
                timeField: 'created_at'
            - name: ES - Tickets by first_response_at
              type: elasticsearch
              access: proxy
              url: http://zammad-elasticsearch.zammad.svc.cluster.local:9200
              isDefault: false
              uid: zammad-es-first_response_at
              jsonData:
                index: 'zammad_production_ticket'
                timeField: 'first_response_at'
      dashboards:
        monitoring:
          asterisk:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/asterisk.json
          traefik:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/traefik.json
          postgres-dashboard:
            url: https://raw.githubusercontent.com/prometheus-community/postgres_exporter/master/postgres_mixin/dashboards/postgres-overview.json
          kube-router-dashboard:
            url: https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/dashboard/kube-router.json
          cert-manager:
            gnetId: 11001
            revision: 1
            datasource: Prometheus
          minio-dashboard:
            url: https://raw.githubusercontent.com/minio/minio/master/docs/metrics/prometheus/grafana/minio-dashboard.json
          minio-bucket:
            url: https://raw.githubusercontent.com/minio/minio/master/docs/metrics/prometheus/grafana/minio-bucket.json
          minio-replication:
            url: https://raw.githubusercontent.com/minio/minio/master/docs/metrics/prometheus/grafana/minio-replication.json
        zammad:
          ticket_statistics:
            gnetId: 14222
            revision: 2
          chat_sessions_statistics:
            gnetId: 14224
            revision: 1
          cti_log_statistics:
            gnetId: 14223
            revision: 1

        nats:
          nats-jetstream:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/nats.json
        matrix:
          synapse-dashboard:
            #url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/synapse.json
            url: https://raw.githubusercontent.com/element-hq/synapse/develop/contrib/grafana/synapse.json
          draupnir4all:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/draupnir4all.json
          dendrite-dashboard:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/dendrite.json
          matrix-media-repo-dashboard:
            url: https://git.nordgedanken.dev/kubernetes/grafana/raw/branch/main/matrix-media-repo.json
      grafana.ini:
        smtp:
          enabled: true
          host: mail.nordgedanken.dev:465
          from_address: ops@nordgedanken.dev
        paths:
          data: /var/lib/grafana/
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net
        auth.generic_oauth:
          enabled: true
          scopes: openid email profile roles
          name: OAuth
          allow_sign_up: true
          client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
          client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
          auth_url: https://keycloak.midnightthoughts.space/realms/master/protocol/openid-connect/auth
          token_url: https://keycloak.midnightthoughts.space/realms/master/protocol/openid-connect/token
          api_url: https://keycloak.midnightthoughts.space/realms/master/protocol/openid-connect/userinfo
          role_attribute_path: contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'
      imageRenderer:
        enabled: true
    kubeProxy:
      enabled: false
  postRenderers:
    - kustomize:
        patches:
          - target:
              # Ignore these objects from Flux diff as they are mutated from chart hooks
              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)
              name: kube-prometheus-stack-admission
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          - target:
              # Ignore these objects from Flux diff as they are mutated at apply time but not at dry-run time
              kind: PrometheusRule
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
