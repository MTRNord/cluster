apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
    name: custom-proxy-config
    namespace: envoy-gateway
spec:
    provider:
        type: Kubernetes
        kubernetes:
            envoyDeployment:
                replicas: 3
    logging:
        level:
            default: info
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
    name: envoy-gateway-class
    namespace: envoy-gateway
spec:
    controllerName: gateway.envoyproxy.io/gatewayclass-controller
    parametersRef:
        group: gateway.envoyproxy.io
        kind: EnvoyProxy
        name: custom-proxy-config
        namespace: envoy-gateway
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
    name: email-gateway
    namespace: envoy-gateway
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-dns
spec:
    gatewayClassName: envoy-gateway-class
    infrastructure:
        annotations:
            external-dns.alpha.kubernetes.io/access: public
            load-balancer.hetzner.cloud/location: hel1
            load-balancer.hetzner.cloud/name: email-envoy
            load-balancer.hetzner.cloud/use-private-ip: "true"
            load-balancer.hetzner.cloud/uses-proxyprotocol: "true"
    # no wildcards due to Envoy bug: https://github.com/envoyproxy/gateway/issues/2675#issuecomment-1960449002
    listeners:
        - name: smtp
          protocol: TCP
          port: 25
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: submissions
          protocol: TCP
          port: 465
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: submission
          protocol: TCP
          port: 587
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: imap
          protocol: TCP
          port: 143
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: imaps
          protocol: TCP
          port: 993
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
    name: envoy-gateway
    namespace: envoy-gateway
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-dns
spec:
    gatewayClassName: envoy-gateway-class
    infrastructure:
        annotations:
            external-dns.alpha.kubernetes.io/access: public
            load-balancer.hetzner.cloud/location: hel1
            load-balancer.hetzner.cloud/name: envoy
            load-balancer.hetzner.cloud/use-private-ip: "true"
            load-balancer.hetzner.cloud/uses-proxyprotocol: "true"
    # no wildcards due to Envoy bug: https://github.com/envoyproxy/gateway/issues/2675#issuecomment-1960449002
    listeners:
        - name: ssh
          protocol: TCP
          port: 22
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: https-talos-midnightthoughts
          protocol: HTTPS
          hostname: "talos.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: talos.midnightthoughts.space-tls
        - name: https-nordgedanken.dev
          protocol: HTTPS
          hostname: "nordgedanken.dev"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: nordgedanken.dev-tls
        - name: https-openpgpkey.nordgedanken.dev
          protocol: HTTPS
          hostname: "openpgpkey.nordgedanken.dev"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: openpgpkey.nordgedanken.dev-tls
        - name: https-midnightthoughts-auth
          protocol: HTTPS
          hostname: "auth.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: auth.midnightthoughts.space-tls
        - name: https-midnightthoughts-grafana
          protocol: HTTPS
          hostname: "grafana.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: grafana.midnightthoughts.space-tls
        - name: https-draupnir-midnightthoughts
          protocol: HTTPS
          hostname: "draupnir.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: draupnir.midnightthoughts.space-tls
        - name: https-matrix-draupnir-midnightthoughts
          protocol: HTTPS
          hostname: "matrix.draupnir.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: matrix.draupnir.midnightthoughts.space-tls
        - name: https-midnightthoughts-vault
          protocol: HTTPS
          hostname: "vault.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: vault.midnightthoughts.space-tls
        - name: https-midnightthoughts-budget
          protocol: HTTPS
          hostname: "budget.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: budget.midnightthoughts.space-tls
        - name: https-midnightthoughts-ldap
          protocol: HTTPS
          hostname: "ldap.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: ldap.midnightthoughts.space-tls
        - name: ldap
          protocol: TCP
          port: 389
          allowedRoutes:
              kinds:
                  - kind: TCPRoute
              namespaces:
                  from: All
        - name: https-mtrnord-blog-gts
          protocol: HTTPS
          hostname: "gts.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: gts.mtrnord.blog-tls
        - name: https-midnightthoughts-collabora
          protocol: HTTPS
          hostname: "collabora.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: collabora.midnightthoughts.space
        - name: https-midnightthoughts-webhook-kubernetes
          protocol: HTTPS
          hostname: "webhook.kubernetes.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: webhook.kubernetes.midnightthoughts.space-tls
        - name: https-api-connectivity-tester-mtrnord-blog
          protocol: HTTPS
          hostname: "api.connectivity-tester.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: api.connectivity-tester.mtrnord.blog-tls
        - name: https-stage-connectivity-tester-mtrnord-blog
          protocol: HTTPS
          hostname: "stage.connectivity-tester.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: stage.connectivity-tester.mtrnord.blog-tls
        - name: https-connectivity-tester-mtrnord-blog
          protocol: HTTPS
          hostname: "connectivity-tester.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: connectivity-tester.mtrnord.blog-tls
        - name: https-federationtester-mtrnord-blog
          protocol: HTTPS
          hostname: "federationtester.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: federationtester.mtrnord.blog-tls
        - name: https-mtrnord-blog-root
          protocol: HTTPS
          hostname: "mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: mtrnord.blog-tls
        - name: https-mtrnord-blog-matrix
          protocol: HTTPS
          hostname: "matrix.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: matrix.mtrnord.blog-tls
        - name: https-rss-mtrnord-blog
          protocol: HTTPS
          hostname: "rss.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: rss.mtrnord.blog-tls
        - name: https-notify-mtrnord-blog
          protocol: HTTPS
          hostname: "notify.mtrnord.blog"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: notify.mtrnord.blog-tls
        - name: https-midnightthoughts-rspamd
          protocol: HTTPS
          hostname: "rspamd.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: rspamd.midnightthoughts.space-tls
        - name: https-midnightthoughts-plane
          protocol: HTTPS
          hostname: "plane.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: plane.midnightthoughts.space
        - name: https-midnightthoughts-kimai
          protocol: HTTPS
          hostname: "kimai.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: kimai.midnightthoughts.space
        - name: https-midnightthoughts-morg-statistics
          protocol: HTTPS
          hostname: "morg-statistics.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: morg-statistics.midnightthoughts.space
        - name: https-midnightthoughts-mta-sts
          protocol: HTTPS
          hostname: "mta-sts.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: mta-sts.midnightthoughts.space
        - name: https-midnightthoughts-lists
          protocol: HTTPS
          hostname: "lists.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: lists.midnightthoughts.space
        - name: https-midnightthoughts-git
          protocol: HTTPS
          hostname: "git.midnightthoughts.space"
          port: 443
          allowedRoutes:
              namespaces:
                  from: "All"
          tls:
              mode: Terminate
              certificateRefs:
                  - kind: Secret
                    name: git.midnightthoughts.space
        - name: http
          protocol: HTTP
          port: 80
          allowedRoutes:
              namespaces:
                  from: "All"
                  # - name: https-midnightthoughts-capacitor
                  #   protocol: HTTPS
                  #   hostname: "ui.k8s.midnightthoughts.space"
                  #   port: 443
                  #   allowedRoutes:
                  #       namespaces:
                  #           from: "All"
                  #   tls:
                  #       mode: Terminate
                  #       certificateRefs:
                  #           - kind: Secret
                  #             name: ui.k8s.midnightthoughts.space-tls
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
    name: email-policy
    namespace: envoy-gateway
spec:
    targetRefs:
        - group: gateway.networking.k8s.io
          kind: Gateway
          name: email-gateway
    # WARNING: Cilium 1.17+ only supports the correct ipMode magic for this to work. Hence it currently fails
    enableProxyProtocol: true
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
    name: enable-proxy-protocol-policy
    namespace: envoy-gateway
spec:
    targetRefs:
        - group: gateway.networking.k8s.io
          kind: Gateway
          name: envoy-gateway
    # WARNING: Cilium 1.17+ only supports the correct ipMode magic for this to work. Hence it currently fails
    enableProxyProtocol: true
    # Alternative to enableProxyProtocol: true
    #clientIPDetection:
    #    xForwardedFor:
    #        trustedCIDRs:
    #            - 10.10.0.0/16
    #            - 100.96.0.0/16
    tcpKeepalive:
        idleTime: 1h
        interval: 75s
        probes: 9
    path:
        escapedSlashesAction: KeepUnchanged
---
# Monitors the above gateway using a servicemonitor
# First we do a service matching on the labels "gateway.envoyproxy.io/owning-gateway-name: envoy-gateway" and "gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway"
kind: Service
apiVersion: v1
metadata:
    name: envoy-gateway-monitor
    namespace: envoy-gateway
    labels:
        proxy: envoy
spec:
    selector:
        gateway.envoyproxy.io/owning-gateway-name: envoy-gateway
        gateway.envoyproxy.io/owning-gateway-namespace: envoy-gateway
    ports:
        - name: metrics
          port: 19001
          targetPort: 19001
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
    name: envoy-gateway-monitor
    namespace: envoy-gateway
spec:
    selector:
        matchLabels:
            proxy: envoy
    endpoints:
        - port: metrics
          path: /stats/prometheus
          interval: 10s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
    name: envoy-gateway-controlplane-monitor
    namespace: envoy-gateway
spec:
    selector:
        matchLabels:
            control-plane: envoy-gateway
    endpoints:
        - port: metrics
          interval: 10s
