---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: kube-router
    tier: node
  annotations:
    checkov.io/skip1: CKV_K8S_20=The container needs to modify host network rules.
    checkov.io/skip2: CKV_K8S_19=The container needs to modify host network rules.
    checkov.io/skip3: CKV_K8S_38=The container needs to know values from the node.
    checkov.io/skip4: CKV_K8S_28=The container does bgp.
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
  name: kube-router
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: kube-router
      tier: node
  template:
    metadata:
      labels:
        k8s-app: kube-router
        tier: node
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: kube-router
      containers:
        - name: kube-router
          image: docker.io/cloudnativelabs/kube-router:v2.0.0-rc3
          imagePullPolicy: Always
          args:
            - "--run-router=true"
            - "--run-firewall=false"
            - "--run-service-proxy=false"
            - "--enable-cni=false"
            - "--enable-pod-egress=false"
            - "--enable-ipv4=true"
            - "--enable-ipv6=true"
            - "--service-cluster-ip-range=10.96.0.0/16"
            - "--service-cluster-ip-range=fc00:1::/112"
            - "--enable-ibgp=true"
            - "--enable-overlay=true"
            - "--advertise-cluster-ip=true"
            - "--advertise-external-ip=true"
            - "--advertise-loadbalancer-ip=true"
            - "--overlay-type=full"
            #- "--bgp-graceful-restart=true"
            - "-v=3"
            #- "--peer-router-ips=<CHANGE ME>"
            #- "--peer-router-asns=<CHANGE ME>"
            #- "--cluster-asn=<CHANGE ME>"
            # Metrics
            - "--metrics-port=8081"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /healthz
              port: 20244
            initialDelaySeconds: 10
            periodSeconds: 3
          ports:
            - containerPort: 8081
              name: monitoring
          resources:
            requests:
              cpu: 250m
              memory: 250Mi
          securityContext:
            privileged: true
          volumeMounts:
            - name: xtables-lock
              mountPath: /run/xtables.lock
              readOnly: false
      hostNetwork: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-router
  namespace: kube-system

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-router
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - services
      - nodes
      - endpoints
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "networking.k8s.io"
    resources:
      - networkpolicies
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - extensions
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-router
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-router
subjects:
  - kind: ServiceAccount
    name: kube-router
    namespace: kube-system
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: kube-router
  namespace: kube-system
spec:
  namespaceSelector:
    matchNames:
      - "kube-system"
  podMetricsEndpoints:
    - interval: 5s
      path: /metrics
      port: monitoring
  selector:
    matchLabels:
      k8s-app: kube-router
